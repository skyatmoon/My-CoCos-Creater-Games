{"version":3,"sources":["assets\\Script\\Maincontrol.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport AudioSourceControl, { SoundType } from \"./AudioSourceControl\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport enum GameStatus{\r\n    Game_Ready = 0,\r\n    Game_Playing,\r\n    Game_Over\r\n}\r\n\r\n@ccclass\r\nexport default class MainControl extends cc.Component {\r\n    @property(cc.Sprite)\r\n    spBg: cc.Sprite [] = [null, null];\r\n    @property(cc.Prefab)\r\n    pipePrefab: cc.Prefab = null;\r\n    @property(cc.Label)\r\n    labelScore: cc.Label = null;\r\n    // @property(AudioSourceControl)\r\n    // audioSourceControl: AudioSourceControl = null;\r\n    // record score\r\n    gameScore: number = 0;\r\n\r\n    pipe: cc.Node[] = [null, null, null]\r\n\r\n    spGameOver: cc.Sprite = null;\r\n\r\n    btnStart: cc.Button = null;\r\n\r\n    gameStatus: GameStatus = GameStatus.Game_Ready;\r\n\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        // open Collision System\r\n        var collisionManager = cc.director.getCollisionManager();\r\n        collisionManager.enabled = true;\r\n        // open debug draw when you debug the game\r\n        // do not forget to close when you ship the game\r\n        collisionManager.enabledDebugDraw = false;\r\n        // find the GameOver node, and set active property to false\r\n        this.spGameOver = this.node.getChildByName(\"GameOver\").getComponent(cc.Sprite);\r\n        this.spGameOver.node.active = false;\r\n        // this.spGameOver = this.node.getChildByName(\"GameOver\").getComponent(cc.Sprite);\r\n        // this.spGameOver.node.active = false;\r\n\r\n        this.btnStart = this.node.getChildByName(\"BtnStart\").getComponent(cc.Button);\r\n        this.btnStart.node.on(cc.Node.EventType.TOUCH_END,this.touchStartBtn, this);\r\n    }\r\n    \r\n    gameOver () {\r\n        this.spGameOver.node.active = true;\r\n        this.btnStart.node.active = true;\r\n        this.gameStatus = GameStatus.Game_Over;\r\n        // this.audioSourceControl.playSound(SoundType.E_Sound_Die);\r\n    }\r\n\r\n    touchStartBtn () {\r\n        this.btnStart.node.active = false;\r\n\r\n        this.gameStatus = GameStatus.Game_Playing;\r\n\r\n        this.spGameOver.node.active = false;\r\n\r\n        for (let i = 0; i < this.pipe.length; i++) {\r\n            this.pipe[i].x = 170 + 200 * i;\r\n            var minY = -120;\r\n            var maxY = 120;\r\n            this.pipe[i].y = minY + Math.random() * (maxY - minY);\r\n        }\r\n\r\n        var bird = this.node.getChildByName(\"Bird\");\r\n        bird.y = 0;\r\n        bird.rotation = 0;\r\n\r\n        this.gameScore = 0;\r\n        this.labelScore.string = this.gameScore.toString();\r\n\r\n    }\r\n\r\n    start () {\r\n        for (let i = 0; i < this.pipe.length; i++) {\r\n            this.pipe[i] = cc.instantiate(this.pipePrefab);\r\n            this.node.getChildByName(\"Pipe\").addChild(this.pipe[i]);\r\n    \r\n            this.pipe[i].x = 170 + 200 * i;\r\n            var minY = -120;\r\n            var maxY = 120;\r\n            this.pipe[i].y = minY + Math.random() * (maxY - minY);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    update (dt: number) {\r\n        if (this.gameStatus != GameStatus.Game_Playing){\r\n            return;\r\n        }\r\n        // move the background node\r\n        for (let i = 0; i < this.spBg.length; i++) {\r\n                this.spBg[i].node.x -= 1.0;\r\n            if (this.spBg[i].node.x <= -288) {\r\n                this.spBg[i].node.x = 288;\r\n            }\r\n        }\r\n\r\n        // move pipes\r\n        for (let i = 0; i < this.pipe.length; i++) {\r\n            this.pipe[i].x -= 1.0;\r\n            if (this.pipe[i].x <= -170) {\r\n                this.pipe[i].x = 430;\r\n\r\n                var minY = -120;\r\n                var maxY = 120;\r\n                this.pipe[i].y = minY + Math.random() * (maxY - minY);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}"]}