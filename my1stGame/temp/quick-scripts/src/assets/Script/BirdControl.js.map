{"version":3,"sources":["assets\\Script\\BirdControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport { SoundType } from \"./AudioSourceControl\";\r\nimport MainControl from \"./Maincontrol\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport enum GameStatus{\r\n    Game_Ready = 0,\r\n    Game_Playing,\r\n    Game_Over\r\n}\r\n@ccclass\r\nexport default class BirdControl extends cc.Component {\r\n\r\n    //Speed of bird\r\n    speed: number = 0;\r\n\r\n    // assign of main Control component\r\n    mainControl: MainControl = null;\r\n\r\n    c1 = cc.Color.BLACK;\r\n    c2 = cc.Color.WHITE;\r\n\r\n\r\n    onLoad () {\r\n        cc.Canvas.instance.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.mainControl = cc.Canvas.instance.node.getComponent(\"Maincontrol\");\r\n    }\r\n\r\n    onTouchStart (event: cc.Event.EventTouch) {\r\n        if (event.getLocation().y >= 256){\r\n            this.speed = 3;\r\n            }\r\n        else{\r\n            this.speed = -3;\r\n            }\r\n        // this.speed = 1;\r\n        // this.mainControl.audioSourceControl.playSound(SoundType.E_Sound_Fly);\r\n    }\r\n\r\n    onCollisionEnter (other: cc.Collider, self: cc.Collider) {\r\n        // // game over\r\n        // cc.log(\"game over\");\r\n        // this.mainControl.gameOver();\r\n        // collider tag is 0, that means the bird have a collision with pipe, then game over\r\n        if (other.tag === 0) {\r\n            cc.log(\"game over\");\r\n            this.mainControl.gameOver();\r\n            this.speed = 0;\r\n        }\r\n        // collider tag is 1, that means the bird cross a pipe, then add score\r\n        else if (other.tag === 1) {\r\n\r\n            this.mainControl.gameScore++;\r\n            this.mainControl.labelScore.string = this.mainControl.gameScore.toString();\r\n            // this.mainControl.audioSourceControl.playSound(SoundType.E_Sound_Score);\r\n            this.node.color = this.c1;\r\n\r\n        }\r\n        else if (other.tag === 2) {\r\n\r\n            this.mainControl.gameScore++;\r\n            this.mainControl.labelScore.string = this.mainControl.gameScore.toString();\r\n            // this.mainControl.audioSourceControl.playSound(SoundType.E_Sound_Score);\r\n            this.node.color = this.c2;\r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    update (dt: number) {\r\n\r\n        if (this.mainControl.gameStatus != GameStatus.Game_Playing) {\r\n            return;\r\n        }\r\n        if (this.node.position.y > 0){\r\n        this.speed -= 0.05;\r\n        this.node.y += this.speed;\r\n        }\r\n        else if (this.node.position.y < 0){\r\n            this.speed += 0.05;\r\n            this.node.y += this.speed;\r\n        }\r\n        else {\r\n            this.node.y += this.speed; \r\n        }\r\n\r\n        this.node.y -= (0.005 * this.node.y);\r\n\r\n        var angle = -(this.speed/2) * 30;\r\n        if (angle >= 30) {\r\n            angle = 30;\r\n        }\r\n        this.node.rotation = angle;\r\n\r\n        // when bird is out of screen, then game over\r\n        if (this.node.y >= 256 || this.node.y <= -256) {\r\n            this.mainControl.gameOver();\r\n            this.speed = 0;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n}"]}